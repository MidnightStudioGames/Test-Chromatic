name: 'Chromatic'

on:
  workflow_dispatch:
  issue_comment:
    types: [created, edited]
  merge_group:
    types: [checks_requested]
    branches: [main]

jobs:
  Chromatic:
    permissions: write-all
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' || (github.event.issue.pull_request && contains(github.event.comment.body, '/chromatic')) || github.event_name == 'merge_group'
    steps:
      - name: Get PR HEAD Commit Hash
        id: getCommitHash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: echo "pr_commit_hash=$(gh pr view $PR_NUMBER --repo ${{ github.repository }} --json headRefOid | jq -r '.headRefOid')" >> $GITHUB_OUTPUT
      
      - name: Checkout code from PR or default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.getCommitHash.outputs.pr_commit_hash }}

      - name: Fetch all branches
        run: git fetch --all

      - name: Checkout specific commit
        run: git checkout ${{ steps.getCommitHash.outputs.pr_commit_hash }}

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Publish to Chromatic
        run: pnpm exec chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --exit-zero-on-changes
        env:
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      # Use the correct SHA for the PR or other events
      - name: Update PR status
        if: github.event.issue.pull_request || github.event.pull_request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          OWNER: MidnightStudioGames
          REPO: Test-Chromatic
          LAST_COMMIT_HASH: ${{ steps.getCommitHash.outputs.pr_commit_hash }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/statuses/$LAST_COMMIT_HASH \
            -d '{
              "state": "success",
              "target_url": "https://github.com/$OWNER/$REPO/actions/runs/${{ github.run_id }}",
              "description": "Chromatic deployment succeeded",
              "context": "Chromatic"
            }'

      - name: Mark as success
        run: exit 0