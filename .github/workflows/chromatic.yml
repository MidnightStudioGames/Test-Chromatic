name: 'Chromatic'

on:
  workflow_dispatch:
  issue_comment:
    types: [created, edited]
  merge_group:
    types: [checks_requested]
    branches: [main]

jobs:
  Chromatic:
    permissions: write-all
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' || (github.event.issue.pull_request  && contains(github.event.comment.body, '/chromatic')) || github.event_name == 'merge_group'
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Fetch all branches
        run: git fetch --all

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Publish to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          skip: ${{ github.event_name == 'merge_group' }}

      # - name: Update PR status
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      #       OWNER: MidnightStudioGames
      #       REPO: Test-Chromatic
      #       SHA: ${{ github.sha }}
      #   run: |
      #       curl -L \
      #         -X POST \
      #         -H "Accept: application/vnd.github+json" \
      #         -H "Authorization: Bearer $GITHUB_TOKEN" \
      #         -H "X-GitHub-Api-Version: 2022-11-28" \
      #         https://api.github.com/repos/$OWNER/$REPO/statuses/$SHA \
      #         -d '{
      #           "state": "success",
      #           "target_url": "https://github.com/$OWNER/$REPO/actions/runs/${{ github.run_id }}",
      #           "description": "Chromatic deployment succeeded",
      #           "context": "Chromatic"
      #         }'

      - name: get the one latest&last sha # get the last commit sha in pull_Requst
        run: |
          URL=${{ github.event.issue.pull_request.url }}/commits
          echo "PRSHA=$(curl -u "weide:${{ secrets.GITHUB_TOKEN }}" -s $URL | jq -r '.[] | .sha' | xargs | awk -F " " '{print $NF}')" >> $PRSHA
      - name: echo PRSHA # check the lastest SHA
        run: |
          echo $PRSHA
      - name: create the status # create the status on the lastest commit sha from pull request
        run: |
            curl -X POST -u "weide:${{ secrets.PAT0309 }}" -H "Content-Type: application/json" "https://api.github.com/repos/${{ github.repository }}/statuses/$PRSHA" --data '{ "state": "failure", "target_url": "https://example.com/build/status", "description": "The build failed!", "context": "continuous-integration/statuscreation7"}'
  
      - name: Mark as success
        run: exit 0
  
